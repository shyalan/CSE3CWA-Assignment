{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name and number that the user entered\n    const newContact = {\n      contactName: name,\n      contactNumbers: [number]\n    };\n\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, newContact]);\n\n    // Clear the input fields\n    setName('');\n    setNumber('');\n  };\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleAddNumber = (contact, newNumber) => {\n    // Add a new number to the contact's list of numbers\n    contact.contactNumbers.push(newNumber);\n    setContacts([...contacts]);\n  };\n  const handleDeleteNumber = (contact, numberToDelete) => {\n    // Delete a number from the contact's list of numbers\n    contact.contactNumbers = contact.contactNumbers.filter(number => number !== numberToDelete);\n    setContacts([...contacts]);\n  };\n  const handleEditContact = contact => {\n    // Open a modal to allow the user to edit the contact\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), contact.contactName, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.contactNumbers.map((number, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [number, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteNumber(contact, number),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter a phone number\",\n            value: number,\n            onChange: event => setNumber(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddNumber(contact, number),\n            children: \"Add Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L0WJorx95WK16zEvdmQUVKpRHMg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","name","setName","number","setNumber","handleCreateContact","newContact","contactName","contactNumbers","handleDeleteContact","contact","filter","c","handleAddNumber","newNumber","push","handleDeleteNumber","numberToDelete","handleEditContact","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","index","type","placeholder","value","onChange","event","target","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name and number that the user entered\n    const newContact = {\n      contactName: name,\n      contactNumbers: [number],\n    };\n\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, newContact]);\n\n    // Clear the input fields\n    setName('');\n    setNumber('');\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleAddNumber = (contact, newNumber) => {\n    // Add a new number to the contact's list of numbers\n    contact.contactNumbers.push(newNumber);\n    setContacts([...contacts]);\n  };\n\n  const handleDeleteNumber = (contact, numberToDelete) => {\n    // Delete a number from the contact's list of numbers\n    contact.contactNumbers = contact.contactNumbers.filter((number) => number !== numberToDelete);\n    setContacts([...contacts]);\n  };\n\n  const handleEditContact = (contact) => {\n    // Open a modal to allow the user to edit the contact\n  };\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              <button onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <button onClick={() => handleEditContact(contact)}>Edit</button>\n              {contact.contactName}\n              <ul>\n                {contact.contactNumbers.map((number, index) => (\n                  <li key={index}>\n                    {number}{' '}\n                    <button onClick={() => handleDeleteNumber(contact, number)}>Delete</button>\n                  </li>\n                ))}\n              </ul>\n              <input\n                type=\"text\"\n                placeholder=\"Enter a phone number\"\n                value={number}\n                onChange={(event) => setNumber(event.target.value)}\n              />\n              <button onClick={() => handleAddNumber(contact, number)}>Add Number</button>\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <button onClick={handleCreateContact}>Create Contact</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}