{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  const [name, setName] = useState('');\n  useEffect(() => {\n    // Fetch the list of contacts from the backend when the component mounts\n    fetch('http://localhost/api/contacts').then(response => response.json()).then(data => setContacts(data)).catch(error => console.error('Error:', error));\n  }, []);\n  const handleCreateContact = () => {\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Create a new contact and add it to the database\n    fetch('http://localhost/api/contacts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        contactName: name\n      })\n    }).then(response => response.json()).then(data => {\n      setContacts([...contacts, data]);\n      setName('');\n    }).catch(error => console.error('Error:', error));\n  };\n  const handleDeleteContact = contact => {\n    fetch(`http://localhost/api/contacts/${contact.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setContacts(contacts.filter(c => c.id !== contact.id));\n    }).catch(error => console.error('Error:', error));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    fetch(`http://localhost/api/contacts/${updatedContact.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedContact)\n    }).then(response => response.json()).then(() => {\n      const updatedContacts = contacts.map(contact => contact.id === updatedContact.id ? updatedContact : contact);\n      setContacts(updatedContacts);\n      setEditingContact(null);\n    }).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create\",\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.contactName, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.numbers.map((phoneNumber, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: phoneNumber\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n        contact: editingContact,\n        onSave: handleSaveEditedContact,\n        onClose: () => setEditingContact(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LMf6dF2Pze6vGOYXSAG3B5EF9/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","name","setName","fetch","then","response","json","data","catch","error","console","handleCreateContact","alert","method","headers","body","JSON","stringify","contactName","handleDeleteContact","contact","id","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","event","target","onClick","numbers","phoneNumber","index","onSave","onClose","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend when the component mounts\n    fetch('http://localhost/api/contacts')\n      .then((response) => response.json())\n      .then((data) => setContacts(data))\n      .catch((error) => console.error('Error:', error));\n  }, []);\n\n  const handleCreateContact = () => {\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Create a new contact and add it to the database\n    fetch('http://localhost/api/contacts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ contactName: name }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setContacts([...contacts, data]);\n        setName('');\n      })\n      .catch((error) => console.error('Error:', error));\n  };\n\n  const handleDeleteContact = (contact) => {\n    fetch(`http://localhost/api/contacts/${contact.id}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        setContacts(contacts.filter((c) => c.id !== contact.id));\n      })\n      .catch((error) => console.error('Error:', error));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    fetch(`http://localhost/api/contacts/${updatedContact.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedContact),\n    })\n      .then((response) => response.json())\n      .then(() => {\n        const updatedContacts = contacts.map((contact) =>\n          contact.id === updatedContact.id ? updatedContact : contact\n        );\n        setContacts(updatedContacts);\n        setEditingContact(null);\n      })\n      .catch((error) => console.error('Error:', error));\n  };\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <input type=\"text\" placeholder=\"Enter contact name\" value={name} onChange={(event) => setName(event.target.value)} />\n        <button className=\"create\" onClick={handleCreateContact}>Create Contact</button>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.id}>\n              {contact.contactName}\n              <button className=\"edit\" onClick={() => handleEditContact(contact)}>Edit</button>\n              <button className=\"delete\" onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <ul>\n                {contact.numbers.map((phoneNumber, index) => (\n                  <li key={index}>\n                    {phoneNumber}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n        {editingContact && (\n          <EditContactModal\n            contact={editingContact}\n            onSave={handleSaveEditedContact}\n            onClose={() => setEditingContact(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}