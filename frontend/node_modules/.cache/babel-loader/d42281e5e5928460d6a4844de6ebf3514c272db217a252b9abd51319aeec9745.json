{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: name,\n      names: [],\n      numbers: []\n    }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map(contact => contact === editingContact ? updatedContact : contact);\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), contact.contactName, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), \" \", name, \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 53\n              }, this), \" \", contact.numbers[index]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n        contact: editingContact,\n        onSave: handleSaveEditedContact,\n        onClose: () => setEditingContact(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gIUuHRuQQWFGKTe+29qgQ8XCohY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","handleCreateContact","contactName","name","names","numbers","setName","handleDeleteContact","contact","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","index","type","placeholder","value","onChange","event","target","onSave","onClose","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, { contactName: name, names: [], numbers: [] }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map((contact) =>\n      contact === editingContact ? updatedContact : contact\n    );\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              <button onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <button onClick={() => handleEditContact(contact)}>Edit</button>\n              {contact.contactName}\n              <ul>\n                {contact.names.map((name, index) => (\n                  <li key={index}>\n                    <strong>Name:</strong> {name} - <strong>Number:</strong> {contact.numbers[index]}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <button onClick={handleCreateContact}>Create Contact</button>\n        {editingContact && (\n          <EditContactModal\n            contact={editingContact}\n            onSave={handleSaveEditedContact}\n            onClose={() => setEditingContact(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}