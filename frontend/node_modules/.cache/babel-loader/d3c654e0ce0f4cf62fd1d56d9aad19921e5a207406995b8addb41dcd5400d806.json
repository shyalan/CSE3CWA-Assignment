{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some(contact => contact.contactName === name);\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: name,\n      names: [],\n      numbers: []\n    }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map(contact => contact === editingContact ? updatedContact : contact);\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter contact name\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateContact,\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n          contact: editingContact,\n          onSave: handleSaveEditedContact,\n          onClose: () => setEditingContact(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.contactName, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this), \" \", name, \" - \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Number:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 57\n              }, this), \" \", contact.numbers[index]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gIUuHRuQQWFGKTe+29qgQ8XCohY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","handleCreateContact","nameExists","some","contact","contactName","name","alert","names","numbers","setName","handleDeleteContact","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","event","target","onClick","onSave","onClose","index","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some((contact) => contact.contactName === name);\n\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, { contactName: name, names: [], numbers: [] }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map((contact) =>\n      contact === editingContact ? updatedContact : contact\n    );\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n            <input\n            type=\"text\"\n            placeholder=\"Enter contact name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            />\n            <button onClick={handleCreateContact}>Create Contact</button>\n            {editingContact && (\n            <EditContactModal\n                contact={editingContact}\n                onSave={handleSaveEditedContact}\n                onClose={() => setEditingContact(null)}\n            />\n            )}\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n                {contact.contactName}\n                <button onClick={() => handleEditContact(contact)}>Edit</button>\n                <button onClick={() => handleDeleteContact(contact)}>Delete</button>\n                <ul>\n                    {contact.names.map((name, index) => (\n                    <li key={index}>\n                        <strong>Name:</strong> {name} - <strong>Number:</strong> {contact.numbers[index]}\n                    </li>\n                    ))}\n                </ul>\n                </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}