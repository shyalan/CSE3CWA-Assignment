{"ast":null,"code":"var _jsxFileName = \"/app/src/EditContactModal.js\",\n  _s = $RefreshSig$();\n// EditContactModal.js\nimport React, { useState } from 'react';\nimport { db } from '../api/models/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditContactModal(_ref) {\n  _s();\n  let {\n    contact,\n    onSave,\n    onClose\n  } = _ref;\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameList, setNameList] = useState(contact.names || []);\n  const [numberList, setNumberList] = useState(contact.numbers || []);\n  const handleAddNameAndNumber = () => {\n    if (newName && newNumber) {\n      setNameList([...nameList, newName]);\n      setNumberList([...numberList, newNumber]);\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n  const handleDeleteNameAndNumber = index => {\n    const updatedNames = [...nameList];\n    updatedNames.splice(index, 1);\n    setNameList(updatedNames);\n    const updatedNumbers = [...numberList];\n    updatedNumbers.splice(index, 1);\n    setNumberList(updatedNumbers);\n  };\n  const handleSave = () => {\n    // Update the contact in the database\n    db.contacts.update({\n      names: nameList,\n      numbers: numberList\n    }, {\n      where: {\n        id: contact.id\n      }\n    }).then(() => {\n      // Save the updated contact to the state\n      onSave({\n        ...contact,\n        names: nameList,\n        numbers: numberList\n      });\n\n      // Close the modal\n      onClose();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Contact Type\",\n          value: newName,\n          onChange: e => setNewName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Contact Number\",\n          value: newNumber,\n          onChange: e => setNewNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add\",\n        onClick: handleAddNameAndNumber,\n        children: \"Add Name & Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Names & Numbers:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nameList.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"name-rectangle\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [name, \" - \", numberList[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteNameAndNumber(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(EditContactModal, \"whCP4oTRkTvxWlyhJOa+mBrqm+U=\");\n_c = EditContactModal;\nexport default EditContactModal;\nvar _c;\n$RefreshReg$(_c, \"EditContactModal\");","map":{"version":3,"names":["React","useState","db","jsxDEV","_jsxDEV","EditContactModal","_ref","_s","contact","onSave","onClose","newName","setNewName","newNumber","setNewNumber","nameList","setNameList","names","numberList","setNumberList","numbers","handleAddNameAndNumber","handleDeleteNameAndNumber","index","updatedNames","splice","updatedNumbers","handleSave","contacts","update","where","id","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","name","_c","$RefreshReg$"],"sources":["/app/src/EditContactModal.js"],"sourcesContent":["// EditContactModal.js\nimport React, { useState } from 'react';\nimport { db } from '../api/models/index';\n\nfunction EditContactModal({ contact, onSave, onClose }) {\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameList, setNameList] = useState(contact.names || []);\n  const [numberList, setNumberList] = useState(contact.numbers || []);\n\n  const handleAddNameAndNumber = () => {\n    if (newName && newNumber) {\n      setNameList([...nameList, newName]);\n      setNumberList([...numberList, newNumber]);\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  const handleDeleteNameAndNumber = (index) => {\n    const updatedNames = [...nameList];\n    updatedNames.splice(index, 1);\n    setNameList(updatedNames);\n\n    const updatedNumbers = [...numberList];\n    updatedNumbers.splice(index, 1);\n    setNumberList(updatedNumbers);\n  };\n\n  const handleSave = () => {\n    // Update the contact in the database\n    db.contacts.update({\n      names: nameList,\n      numbers: numberList,\n    }, {\n      where: {\n        id: contact.id,\n      },\n    }).then(() => {\n      // Save the updated contact to the state\n      onSave({\n        ...contact,\n        names: nameList,\n        numbers: numberList,\n      });\n\n      // Close the modal\n      onClose();\n    });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2>Edit Contact</h2>\n        <div className=\"input-container\">\n          <input type=\"text\" placeholder=\"Enter Contact Type\" value={newName} onChange={(e) => setNewName(e.target.value)} />\n        </div>\n        <div className=\"input-container\">\n          <input type=\"text\" placeholder=\"Enter Contact Number\" value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n        </div>\n        <button className=\"add\" onClick={handleAddNameAndNumber}>Add Name & Number</button>\n        <h3>Names & Numbers:</h3>\n        <ul>\n          {nameList.map((name, index) => (\n            <li key={index} className=\"name-rectangle\">\n              <span>{name} - {numberList[index]}</span>\n              <button className=\"delete\" onClick={() => handleDeleteNameAndNumber(index)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n        <button className=\"save\" onClick={handleSave}>Save</button>\n        <button className=\"cancel\" onClick={onClose}>Cancel</button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditContactModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}