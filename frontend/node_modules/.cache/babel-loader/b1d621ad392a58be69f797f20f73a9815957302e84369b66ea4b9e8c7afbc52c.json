{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  const [name, setName] = useState('');\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Check if the name is empty\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some(contact => contact.contactName === name);\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: name,\n      names: [],\n      numbers: []\n    }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map(contact => contact === editingContact ? updatedContact : contact);\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create\",\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.contactName, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button_duo\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: () => handleEditContact(contact),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => handleDeleteContact(contact),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [name, \" - \", contact.numbers[index]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n        contact: editingContact,\n        onSave: handleSaveEditedContact,\n        onClose: () => setEditingContact(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LMf6dF2Pze6vGOYXSAG3B5EF9/M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","name","setName","handleCreateContact","alert","nameExists","some","contact","contactName","names","numbers","handleDeleteContact","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","event","target","onClick","index","onSave","onClose","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  const [name, setName] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Check if the name is empty\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some((contact) => contact.contactName === name);\n\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, { contactName: name, names: [], numbers: [] }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map((contact) =>\n      contact === editingContact ? updatedContact : contact\n    );\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <input type=\"text\" placeholder=\"Enter contact name\" value={name} onChange={(event) => setName(event.target.value)} />\n        <button className=\"create\" onClick={handleCreateContact}>Create Contact</button>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              {contact.contactName}\n              <div className=\"button_duo\">\n                <button className=\"edit\" onClick={() => handleEditContact(contact)}>Edit</button>\n                <button className=\"delete\" onClick={() => handleDeleteContact(contact)}>Delete</button>\n              </div>\n              <ul>\n                {contact.names.map((name, index) => (\n                  <li key={index}>\n                    {name} - {contact.numbers[index]}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n        {editingContact && (\n          <EditContactModal\n            contact={editingContact}\n            onSave={handleSaveEditedContact}\n            onClose={() => setEditingContact(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}