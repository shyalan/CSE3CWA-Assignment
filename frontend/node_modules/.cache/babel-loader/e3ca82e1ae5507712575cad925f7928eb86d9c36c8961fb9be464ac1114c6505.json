{"ast":null,"code":"var _jsxFileName = \"/app/src/EditContactModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { db } from '../api/models/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditContactModal(_ref) {\n  _s();\n  let {\n    contact,\n    onSave,\n    onClose\n  } = _ref;\n  const [name, setName] = useState(contact.name);\n  const handleSave = () => {\n    // Update the contact in the database\n    db.contacts.update({\n      name\n    }, {\n      where: {\n        id: contact.id\n      }\n    }).then(() => {\n      // Save the updated contact to the state\n      onSave({\n        ...contact,\n        name\n      });\n\n      // Close the modal\n      onClose();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Contact Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EditContactModal, \"b9sspLqvnd4CsILFt0HHRBQN+WQ=\");\n_c = EditContactModal;\nexport default EditContactModal;\nvar _c;\n$RefreshReg$(_c, \"EditContactModal\");","map":{"version":3,"names":["React","useState","db","jsxDEV","_jsxDEV","EditContactModal","_ref","_s","contact","onSave","onClose","name","setName","handleSave","contacts","update","where","id","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/app/src/EditContactModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { db } from '../api/models/index';\n\nfunction EditContactModal({ contact, onSave, onClose }) {\n  const [name, setName] = useState(contact.name);\n\n  const handleSave = () => {\n    // Update the contact in the database\n    db.contacts.update({\n      name,\n    }, {\n      where: {\n        id: contact.id,\n      },\n    }).then(() => {\n      // Save the updated contact to the state\n      onSave({\n        ...contact,\n        name,\n      });\n\n      // Close the modal\n      onClose();\n    });\n  };\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2>Edit Contact</h2>\n        <div className=\"input-container\">\n          <input type=\"text\" placeholder=\"Enter Contact Name\" value={name} onChange={(e) => setName(e.target.value)} />\n        </div>\n        <button className=\"save\" onClick={handleSave}>Save</button>\n        <button className=\"cancel\" onClick={onClose}>Cancel</button>\n      </div>\n    </div>\n  );\n}\n\nexport default EditContactModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,EAAE,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,gBAAgBA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,OAAO;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EACpD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAACO,OAAO,CAACG,IAAI,CAAC;EAE9C,MAAME,UAAU,GAAGA,CAAA,KAAM;IACvB;IACAX,EAAE,CAACY,QAAQ,CAACC,MAAM,CAAC;MACjBJ;IACF,CAAC,EAAE;MACDK,KAAK,EAAE;QACLC,EAAE,EAAET,OAAO,CAACS;MACd;IACF,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACZ;MACAT,MAAM,CAAC;QACL,GAAGD,OAAO;QACVG;MACF,CAAC,CAAC;;MAEF;MACAD,OAAO,CAAC,CAAC;IACX,CAAC,CAAC;EACJ,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhB,OAAA;QAAAgB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBpB,OAAA;QAAKe,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BhB,OAAA;UAAOqB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,oBAAoB;UAACC,KAAK,EAAEhB,IAAK;UAACiB,QAAQ,EAAGC,CAAC,IAAKjB,OAAO,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1G,CAAC,eACNpB,OAAA;QAAQe,SAAS,EAAC,MAAM;QAACY,OAAO,EAAElB,UAAW;QAAAO,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DpB,OAAA;QAAQe,SAAS,EAAC,QAAQ;QAACY,OAAO,EAAErB,OAAQ;QAAAU,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAnCQF,gBAAgB;AAAA2B,EAAA,GAAhB3B,gBAAgB;AAqCzB,eAAeA,gBAAgB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}