{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '/src/models/index';\nimport EditContactModal from './EditContactModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParentComponent() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n    db.contacts.findAll().then(contacts => {\n      setContacts(contacts);\n    });\n  }, []);\n  const handleCreateContact = () => {\n    // Check if the contact name is empty\n    if (!editingContact) {\n      alert(\"Please select a contact to edit.\");\n      return;\n    }\n\n    // Update the contact in the database\n    db.contacts.update({\n      name: editingContact.name\n    }, {\n      where: {\n        id: editingContact.id\n      }\n    }).then(() => {\n      // Save the updated contact to the state\n      setContacts(contacts.map(contact => contact === editingContact ? editingContact : contact));\n\n      // Close the modal\n      setEditingContact(null);\n    });\n  };\n  const handleDeleteContact = contact => {\n    // Delete the contact from the database\n    db.contacts.destroy({\n      where: {\n        id: contact.id\n      }\n    }).then(() => {\n      // Remove the contact from the list of contacts in the state\n      setContacts(contacts.filter(c => c !== contact));\n    });\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n        contact: editingContact,\n        onSave: handleCreateContact,\n        onClose: () => setEditingContact(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ParentComponent, \"HRV6E6bBshZ5TOiCDjwiV0F1vLI=\");\n_c = ParentComponent;\nexport default ParentComponent;\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["React","useState","useEffect","db","EditContactModal","jsxDEV","_jsxDEV","ParentComponent","_s","contacts","setContacts","editingContact","setEditingContact","findAll","then","handleCreateContact","alert","update","name","where","id","map","contact","handleDeleteContact","destroy","filter","c","handleEditContact","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSave","onClose","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '/src/models/index';\nimport EditContactModal from './EditContactModal';\n\nfunction ParentComponent() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n    db.contacts.findAll().then((contacts) => {\n      setContacts(contacts);\n    });\n  }, []);\n\n  const handleCreateContact = () => {\n    // Check if the contact name is empty\n    if (!editingContact) {\n      alert(\"Please select a contact to edit.\");\n      return;\n    }\n\n    // Update the contact in the database\n    db.contacts.update({\n      name: editingContact.name,\n    }, {\n      where: {\n        id: editingContact.id,\n      },\n    }).then(() => {\n      // Save the updated contact to the state\n      setContacts(contacts.map((contact) =>\n        contact === editingContact ? editingContact : contact\n      ));\n\n      // Close the modal\n      setEditingContact(null);\n    });\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the database\n    db.contacts.destroy({\n      where: {\n        id: contact.id,\n      },\n    }).then(() => {\n      // Remove the contact from the list of contacts in the state\n      setContacts(contacts.filter((c) => c !== contact));\n    });\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.id}>\n              {contact.name}\n              <button className=\"edit\" onClick={() => handleEditContact(contact)}>Edit</button>\n              <button className=\"delete\" onClick={() => handleDeleteContact(contact)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n        {editingContact && (\n          <EditContactModal\n            contact={editingContact}\n            onSave={handleCreateContact}\n            onClose={() => setEditingContact(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ParentComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}