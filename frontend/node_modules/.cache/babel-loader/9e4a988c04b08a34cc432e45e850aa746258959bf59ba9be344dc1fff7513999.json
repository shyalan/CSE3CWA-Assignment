{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: nameNumbers.contactName,\n      nameNumbers: nameNumbers\n    }]);\n  };\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    // Open a modal to allow the user to edit the contact\n    setEditContact(contact);\n  };\n  const [editContact, setEditContact] = useState(null);\n  const [nameNumbers, setNameNumbers] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditContact(contact);\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), contact.contactName]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: nameNumbers.contactName,\n        onChange: event => setNameNumbers({\n          ...nameNumbers,\n          contactName: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), editContact && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-contact-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Edit Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter contact name\",\n          value: editContact.contactName,\n          onChange: event => setNameNumbers({\n            ...nameNumbers,\n            contactName: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name-number-list\",\n          children: nameNumbers.map(nameNumber => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter name\",\n              value: nameNumber.name,\n              onChange: event => setNameNumbers({\n                ...nameNumbers,\n                name: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter number\",\n              value: nameNumber.number,\n              onChange: event => setNameNumbers({\n                ...nameNumbers,\n                number: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setNameNumbers(nameNumbers.filter(n => n.id !== nameNumber.id));\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, nameNumber.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setEditContact(null);\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Update the contact in the list of contacts\n            setContacts(contacts.map(contact => {\n              if (contact.contactId === editContact.contactId) {\n                return {\n                  ...contact,\n                  contactName: nameNumbers.contactName,\n                  nameNumbers: nameNumbers\n                };\n              } else {\n                return contact;\n              }\n            }));\n            setEditContact(null);\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AvHomD2YhXhNJ7Wg3R8AmnmvyPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","handleCreateContact","contactName","nameNumbers","handleDeleteContact","contact","filter","c","handleEditContact","setEditContact","editContact","setNameNumbers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","type","placeholder","value","onChange","event","target","nameNumber","name","number","n","id","contactId","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: nameNumbers.contactName,\n      nameNumbers: nameNumbers,\n    }]);\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    // Open a modal to allow the user to edit the contact\n    setEditContact(contact);\n  };\n\n  const [editContact, setEditContact] = useState(null);\n\n  const [nameNumbers, setNameNumbers] = useState([]);\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              <button onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <button onClick={() => {\n                setEditContact(contact);\n              }}>Edit</button>\n              {contact.contactName}\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          placeholder=\"Enter contact name\"\n          value={nameNumbers.contactName}\n          onChange={(event) => setNameNumbers({ ...nameNumbers, contactName: event.target.value })}\n        />\n        <button onClick={handleCreateContact}>Create Contact</button>\n        {editContact && (\n          <div className=\"edit-contact-modal\">\n            <h2>Edit Contact</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Enter contact name\"\n              value={editContact.contactName}\n              onChange={(event) => setNameNumbers({ ...nameNumbers, contactName: event.target.value })}\n            />\n            <div className=\"name-number-list\">\n              {nameNumbers.map((nameNumber) => (\n                <div key={nameNumber.id}>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    value={nameNumber.name}\n                    onChange={(event) => setNameNumbers({ ...nameNumbers, name: event.target.value })}\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter number\"\n                    value={nameNumber.number}\n                    onChange={(event) => setNameNumbers({ ...nameNumbers, number: event.target.value })}\n                  />\n                  <button onClick={() => {\n                    setNameNumbers(nameNumbers.filter((n) => n.id !== nameNumber.id));\n                  }}>Delete</button>\n                </div>\n              ))}\n            </div>\n            <button onClick={() => {\n              setEditContact(null);\n            }}>Cancel</button>\n            <button onClick={() => {\n              // Update the contact in the list of contacts\n              setContacts(contacts.map((contact) => {\n                if (contact.contactId === editContact.contactId) {\n                  return {\n                    ...contact,\n                    contactName: nameNumbers.contactName,\n                    nameNumbers: nameNumbers,\n                  };\n                } else {\n                  return contact;\n                }\n              }));\n              setEditContact(null);\n            }}>Update</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}