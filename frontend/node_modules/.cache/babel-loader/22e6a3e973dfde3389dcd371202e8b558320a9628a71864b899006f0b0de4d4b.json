{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Check if the name is empty\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some(contact => contact.contactName === name);\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: name,\n      names: [],\n      numbers: []\n    }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map(contact => contact === editingContact ? updatedContact : contact);\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter contact name\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create\",\n          onClick: handleCreateContact,\n          children: \"Create Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n          contact: editingContact,\n          onSave: handleSaveEditedContact,\n          onClose: () => setEditingContact(null)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [contact.contactName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: contact.names.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [name, \" - \", contact.numbers[index]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gIUuHRuQQWFGKTe+29qgQ8XCohY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","handleCreateContact","name","alert","nameExists","some","contact","contactName","names","numbers","setName","handleDeleteContact","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","event","target","onClick","onSave","onClose","index","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './EditContactModal.css';\nimport EditContactModal from './EditContactModal'; // Import the EditContactModal component\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Check if the name is empty\n    if (!name) {\n      alert(\"Please enter a contact name.\");\n      return;\n    }\n\n    // Check if the name already exists in the list of contacts\n    const nameExists = contacts.some((contact) => contact.contactName === name);\n\n    if (nameExists) {\n      alert(\"Contact with the same name already exists.\");\n      return; // Do not add the contact\n    }\n\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, { contactName: name, names: [], numbers: [] }]);\n    setName(''); // Clear the input field after creating the contact\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map((contact) =>\n      contact === editingContact ? updatedContact : contact\n    );\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          <input\n            type=\"text\"\n            placeholder=\"Enter contact name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n          <button className=\"create\" onClick={handleCreateContact}>Create Contact</button>\n          {editingContact && (\n            <EditContactModal\n              contact={editingContact}\n              onSave={handleSaveEditedContact}\n              onClose={() => setEditingContact(null)}\n            />\n          )}\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              {contact.contactName}\n              <br></br>\n              <button className=\"edit\" onClick={() => handleEditContact(contact)}>Edit</button>\n              <button className=\"delete\" onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <ul>\n                {contact.names.map((name, index) => (\n                  <li key={index}>\n                    {name} - {contact.numbers[index]}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}