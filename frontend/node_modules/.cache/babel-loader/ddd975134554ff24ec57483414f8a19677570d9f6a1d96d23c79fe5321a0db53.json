{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EditContactModal from './EditContactModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, {\n      contactName: name,\n      numbers: []\n    }]);\n  };\n  const handleDeleteContact = contact => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter(c => c !== contact));\n  };\n  const handleEditContact = contact => {\n    setEditingContact(contact);\n  };\n  const handleSaveEditedContact = updatedContact => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map(contact => contact === editingContact ? updatedContact : contact);\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contactor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteContact(contact),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditContact(contact),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), contact.contactName]\n        }, contact.contactName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter contact name\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateContact,\n        children: \"Create Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), editingContact && /*#__PURE__*/_jsxDEV(EditContactModal, {\n        contact: editingContact,\n        onSave: handleSaveEditedContact,\n        onClose: () => setEditingContact(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gIUuHRuQQWFGKTe+29qgQ8XCohY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EditContactModal","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","editingContact","setEditingContact","handleCreateContact","contactName","name","numbers","handleDeleteContact","contact","filter","c","handleEditContact","handleSaveEditedContact","updatedContact","updatedContacts","map","setName","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","placeholder","value","onChange","event","target","onSave","onClose","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EditContactModal from './EditContactModal';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [editingContact, setEditingContact] = useState(null);\n\n  useEffect(() => {\n    // Fetch the list of contacts from the backend\n  }, []);\n\n  const handleCreateContact = () => {\n    // Create a new contact with the contact name that the user entered\n    // Add the new contact to the list of contacts\n    setContacts([...contacts, { contactName: name, numbers: [] }]);\n  };\n\n  const handleDeleteContact = (contact) => {\n    // Delete the contact from the list of contacts\n    setContacts(contacts.filter((c) => c !== contact));\n  };\n\n  const handleEditContact = (contact) => {\n    setEditingContact(contact);\n  };\n\n  const handleSaveEditedContact = (updatedContact) => {\n    // Update the contact in the list of contacts\n    const updatedContacts = contacts.map((contact) =>\n      contact === editingContact ? updatedContact : contact\n    );\n    setContacts(updatedContacts);\n    setEditingContact(null); // Close the modal\n  };\n\n  const [name, setName] = useState('');\n\n  return (\n    <div>\n      <h1>Contactor</h1>\n      <div className=\"container\">\n        <h2>Contacts</h2>\n        <ul>\n          {contacts.map((contact) => (\n            <li key={contact.contactName}>\n              <button onClick={() => handleDeleteContact(contact)}>Delete</button>\n              <button onClick={() => handleEditContact(contact)}>Edit</button>\n              {contact.contactName}\n            </li>\n          ))}\n        </ul>\n        <input type=\"text\" placeholder=\"Enter contact name\" value={name} onChange={(event) => setName(event.target.value)} />\n        <button onClick={handleCreateContact}>Create Contact</button>\n        {editingContact && (\n          <EditContactModal\n            contact={editingContact}\n            onSave={handleSaveEditedContact}\n            onClose={() => setEditingContact(null)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}